version: 2.1
# Use a package of configuration called an orb.


commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1

  # Exercise: Smoke Testing
  smoke_test:
    docker:
     - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment

  # Exercise: Config and Deployment
  #configure_infrastructure: 
  #  docker:
  #    - image: python:3.7-alpine3.11
  #  steps:
  #    - checkout
  #    - add_ssh_keys:
  #        fingerprints: ["2f:56:68:49:19:9f:06:77:58:14:c6:fe:f6:5f:6a:49"] # You can get this ID in the section where you registered the SSH Key
  #    - run:
  #        name: Install dependencies
  #        command: |
  #          # install the dependencies needed for your playbook
  #          apk add --update ansible 
  #    - run:
  #        name: Configure server
  #        command: |
  #          ansible-playbook -i inventory.txt main.yml
  

# Sequential workflow
workflows:
  # Name the workflow
  my_jobs:
    jobs:
    # - configure_infrastructure
      - create_infrastructure
      -  smoke_test:
          requires:
            - create_infrastructure
